name: Build and Deploy Docker Image

on:
  push:
    branches:
      - main  # 메인 브랜치에 푸시될 때 실행

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
    # 1. GitHub에서 코드 체크아웃
    - name: Checkout code
      uses: actions/checkout@v2

    # 2. Docker 설치
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    # 3. Docker Hub에 비밀번호 기반으로 로그인
    - name: Log in to Docker Hub using password
      run: |
        echo "${{ secrets.DOCKER_HUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin

    # 4. Docker 이미지 빌드 및 태그
    - name: Build and tag Docker image
      run: |
        docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/your_docker_image:latest .
        docker tag ${{ secrets.DOCKER_HUB_USERNAME }}/your_docker_image:latest ${{ secrets.DOCKER_HUB_USERNAME }}/your_docker_image:latest

    # 5. Docker Hub로 푸시
    - name: Push Docker image to Docker Hub
      run: |
        docker push ${{ secrets.DOCKER_HUB_USERNAME }}/your_docker_image:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push  # 'build-and-push' 작업이 완료되면 실행

    steps:
    - name: Install expect
      run: sudo apt-get install -y expect

    # 6. SSH 접속 및 Docker 이미지 Pull & Run
    - name: Deploy to Server
      run: |
        echo "Starting deployment..."
        expect << EOF
        spawn ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_ID }}@${{ secrets.SSH_SERVER_IP }}
        expect "password:"
        send "${{ secrets.SSH_PASSWORD }}\r"
        expect "$ "
        send "docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/your_docker_image:latest\r"
        expect "$ "
        send "docker stop your_container || true\r"
        expect "$ "
        send "docker rm your_container || true\r"
        expect "$ "
        send "docker run -d --name your_container ${{ secrets.DOCKER_HUB_USERNAME }}/your_docker_image:latest\r"
        expect "$ "
        send "exit\r"
        expect eof
        EOF
      env:
        SSH_PASSWORD: ${{ secrets.SSH_PASSWORD }}
